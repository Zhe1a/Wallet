{"version":3,"file":"static/js/352.d33e2c2b.chunk.js","mappings":"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","sources":["redux/statistics/statisticsSelectors.js","webpack://wallet/./src/components/DashboardPage/Statistics/Statistics.module.css?8903","components/DashboardPage/Statistics/Statistics.jsx"],"sourcesContent":["export const incomeSummary = state => state.statistics.incomeSummary;\nexport const expenseSummary = state => state.statistics.expenseSummary;\nexport const categoriesSummary = state => state.statistics.categoriesSummary;\n","// extracted by mini-css-extract-plugin\nexport default {\"statisticsBox\":\"Statistics_statisticsBox__DxMj1\",\"statisticsHeading\":\"Statistics_statisticsHeading__5Zf3H\",\"canvasBox\":\"Statistics_canvasBox__5qgm8\",\"canvasSumm\":\"Statistics_canvasSumm__A2GFD\",\"selectBox\":\"Statistics_selectBox__eFpLl\",\"select\":\"Statistics_select__LyRPr\",\"table\":\"Statistics_table__-a2ip\",\"tableSummIncome\":\"Statistics_tableSummIncome__tCZf4\",\"tableSummExpence\":\"Statistics_tableSummExpence__x8Uxq\",\"tableHeader\":\"Statistics_tableHeader__x5grT\",\"tableHeaderData\":\"Statistics_tableHeaderData__UWLJH\",\"tableData\":\"Statistics_tableData__5ZreH\",\"firstTableData\":\"Statistics_firstTableData__EBCTD\",\"lastTableData\":\"Statistics_lastTableData__fozWY\",\"tableDataTotal\":\"Statistics_tableDataTotal__5ikpA\",\"tableDataExpenses\":\"Statistics_tableDataExpenses__hZSI6\",\"tableDataIncome\":\"Statistics_tableDataIncome__e8cdE\",\"spanTd\":\"Statistics_spanTd__29EL2\",\"colorSpan1\":\"Statistics_colorSpan1__-Y34O\",\"colorSpan2\":\"Statistics_colorSpan2__eiaw+\",\"colorSpan3\":\"Statistics_colorSpan3__EGC7Q\",\"colorSpan4\":\"Statistics_colorSpan4__Z3kGN\",\"colorSpan5\":\"Statistics_colorSpan5__QfrNh\",\"colorSpan6\":\"Statistics_colorSpan6__kGOQo\",\"colorSpan7\":\"Statistics_colorSpan7__FNmGv\",\"colorSpan8\":\"Statistics_colorSpan8__VL9wp\",\"colorSpan9\":\"Statistics_colorSpan9__I-Xvx\"};","import React, { useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport Select from 'react-select';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTransactionsSummary } from 'redux/statistics/statisticsOperations';\nimport {\n  categoriesSummary,\n  expenseSummary,\n  incomeSummary,\n} from 'redux/statistics/statisticsSelectors';\nimport s from './Statistics.module.css';\nimport { getAuthBalance } from 'redux/AuthRedux/selectors';\n\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Statistics = () => {\n  const stateStatistics = useSelector(categoriesSummary);\n  const expense = useSelector(expenseSummary);\n  const income = useSelector(incomeSummary);\n  const balance = useSelector(getAuthBalance);\n\n  const [selectedMounth, setSelectedMounth] = useState(null);\n  const [selectedYear, setSelectedYear] = useState({\n    value: '2022',\n    label: '2022',\n  });\n\n  const dispatch = useDispatch();\n  const isData = stateStatistics.length;\n  let dataStatistics = [];\n\n  useEffect(() => {\n    const timeSelected = {\n      month: selectedMounth ? selectedMounth.value : 0,\n      year: selectedYear.value,\n    };\n\n    dispatch(getTransactionsSummary(timeSelected));\n  }, [selectedMounth, selectedYear, dispatch]);\n\n  const optionsMounth = [\n    { value: '1', label: 'January' },\n    { value: '2', label: 'February' },\n    { value: '3', label: 'March' },\n    { value: '4', label: 'April' },\n    { value: '5', label: 'May' },\n    { value: '6', label: 'June' },\n    { value: '7', label: 'July' },\n    { value: '8', label: 'August' },\n    { value: '9', label: 'September' },\n    { value: '10', label: 'October' },\n    { value: '11', label: 'November' },\n    { value: '12', label: 'December' },\n    { value: '', label: 'All' },\n  ];\n  const optionsYear = [\n    { value: '2022', label: '2022' },\n    { value: '2021', label: '2021' },\n    { value: '2020', label: '2020' },\n    { value: '2019', label: '2019' },\n    { value: '2018', label: '2018' },\n  ];\n\n  const data = {\n    labels: [],\n    datasets: [\n      {\n        // label: '# of Votes',\n        data: isData ? dataStatistics : [1],\n        backgroundColor: [\n          'rgba(254, 208, 87, 1)',\n          'rgba(255, 216, 208, 1)',\n          'rgba(253, 148, 152, 1)',\n          'rgba(197, 186, 255, 1)',\n          'rgba(110, 120, 232, 1)',\n          'rgba(74, 86, 226, 1)',\n          'rgba(129, 225, 255, 1)',\n          'rgba(36, 204, 167, 1)',\n          'rgba(0, 173, 132, 1)',\n        ],\n        borderColor: [],\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const TableData = () => {\n    return isData ? (\n      <table className={s.table}>\n        <thead className={s.tableHeader}>\n          <tr>\n            <th className={s.tableHeaderData}>Category</th>\n            <th className={s.tableHeaderData}>Sum</th>\n          </tr>\n        </thead>\n        <tbody>\n          {stateStatistics\n            .filter(({ type }) => type !== 'INCOME')\n            .map(({ name, total }, idx) => {\n              dataStatistics.push(Math.abs(total));\n              return (\n                <tr key={name}>\n                  <td\n                    className={`${s.tableData} ${\n                      idx === 0 && s.firstTableData\n                    }`}\n                  >\n                    <span\n                      className={`${s.spanTd} ${idx === 0 && s.colorSpan1} ${\n                        idx === 1 && s.colorSpan2\n                      } ${idx === 2 && s.colorSpan3} ${\n                        idx === 3 && s.colorSpan4\n                      } ${idx === 4 && s.colorSpan5} ${\n                        idx === 5 && s.colorSpan6\n                      } ${idx === 6 && s.colorSpan7} ${\n                        idx === 7 && s.colorSpan8\n                      } ${idx === 8 && s.colorSpan9}`}\n                    ></span>\n                    {name}\n                  </td>\n                  <td\n                    className={`${s.tableData} ${\n                      idx === 0 && s.firstTableData\n                    }`}\n                  >\n                    {Math.abs(total)}\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td className={`${s.tableData} ${s.tableDataTotal}`}>Expenses:</td>\n            <td className={`${s.tableData} ${s.tableDataExpenses}`}>\n              {Math.abs(expense)}\n            </td>\n          </tr>\n          <tr>\n            <td className={`${s.tableData} ${s.tableDataTotal}`}>Income:</td>\n            <td className={`${s.tableData} ${s.tableDataIncome}`}>\n              {Math.abs(income)}\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    ) : (\n      <h2>Sorry, no data found, please select an alternative query</h2>\n    );\n  };\n\n  return (\n    <>\n      <h1 className={s.statisticsHeading}>Statistics</h1>\n      <div className={s.statisticsBox}>\n        <div className={s.canvasBox}>\n          <h2 className={s.canvasSumm}>₴{`${isData ? balance : ''}`}</h2>\n          <Doughnut data={data} />\n        </div>\n        <div>\n          <div className={s.selectBox}>\n            <Select\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  borderColor: 'transparent',\n                  border: '1px solid #000000',\n                  borderRadius: '30px',\n                  height: '50px',\n                  outline: 'none !important',\n                  lineHeight: 1.58,\n                }),\n              }}\n              className={s.select}\n              onChange={setSelectedMounth}\n              options={optionsMounth}\n              placeholder=\"Month\"\n            />\n            <Select\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  borderColor: 'transparent',\n                  border: '1px solid #000000',\n                  borderRadius: '30px',\n                  height: '50px',\n                  outline: 'none !important',\n                  lineHeight: 1.58,\n                }),\n              }}\n              className={s.select}\n              onChange={setSelectedYear}\n              options={optionsYear}\n              placeholder=\"Year\"\n            />\n          </div>\n          <TableData />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Statistics;\n"],"names":["incomeSummary","state","statistics","expenseSummary","categoriesSummary","ChartJS","ArcElement","Tooltip","Legend","stateStatistics","useSelector","expense","income","balance","getAuthBalance","useState","selectedMounth","setSelectedMounth","value","label","selectedYear","setSelectedYear","dispatch","useDispatch","isData","length","dataStatistics","useEffect","timeSelected","month","year","getTransactionsSummary","data","labels","datasets","backgroundColor","borderColor","borderWidth","TableData","className","s","filter","type","map","idx","name","total","push","Math","abs","styles","control","baseStyles","border","borderRadius","height","outline","lineHeight","onChange","options","placeholder"],"sourceRoot":""}